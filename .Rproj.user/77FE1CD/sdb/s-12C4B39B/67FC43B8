{
    "collab_server" : "",
    "contents" : "library(rvest)\nlibrary(stringr)\nlibrary(magrittr)\nlibrary(tidyverse)\n\nread_games <- function(season) {\n\n  message(\"Reading games.\")\n\n  teams <- read_teams()\n  games <- NULL\n\n  for (s in season) {\n    for (team in teams$short) {\n\n      cat(\".\")\n\n      url <- sprintf(\"http://www.hockey-reference.com/teams/%s/%s_games.html\", team, s)\n\n      games_page <- read_html(url)\n\n      games_table <- games_page %>%\n        html_table(header = F) %>%\n        .[[1]] %>%\n        .[-c(1,2),] %>%\n        as_tibble()\n\n      names(games_table) <- c(\"game_index\", \"date\", \"time\", \"home_away\", \"versus\", \"goals\",\n                              \"goals_against\", \"win_loss\", \"overtime\",\"cum_wins\",\"cum_losses\", \"cum_overtime_losses\",\n                              \"streak\",\"NULL2\",\"shots\",\n                              \"penalty_in_minutes_against\", \"power_play_goals\", \"power_play_opportunities\",\n                              \"short_handed_goals\",\"NULL3\", \"shots_against\", \"penalty_in_minutes_in_favor\",\n                              \"power_play_goals_against\", \"power_play_opportunities_against\",\n                              \"short_handed_goals_against\", \"attendance\", \"game_length\", \"notes\")\n\n      team_games <- games_table %>%\n        select(-matches(\"NULL\"), -notes, -time) %>%\n        filter(game_index != \"GP\",\n               goals != \"\") %>%\n        mutate(season = s,\n               team = team,\n               game_index = as.integer(game_index)) %>%\n        left_join(teams, by = c(\"versus\" = \"long\")) %>%\n        mutate(versus = short) %>%\n        select(-short) %>%\n        mutate(date = as.Date(date),\n               home_away = ifelse(home_away == \"\", \"H\", \"A\")) %>%\n        mutate_at(vars(matches(\"goals\"),\n                       matches(\"shots\"),\n                       matches(\"cum\"),\n                       matches(\"penalty\"),\n                       matches(\"oppor\")), funs(as.integer)) %>%\n        mutate(game_length = as.integer(str_extract(game_length, \"\\\\d+\")) * 60 +\n                 as.integer(str_extract(game_length, \"\\\\d+$\"))) %>%\n        mutate(attendance = as.numeric(str_replace_all(attendance, \",\", \"\"))) %>%\n        .[,c(26, 25, 1:24)]\n\n      games <- bind_rows(games, team_games)\n\n    }\n  }\n\n  games\n\n}\n\n\nread_schedule <- function(season) {\n\n  message(\"Reading schedule.\")\n\n  schedules <- NULL\n\n  for (s in season) {\n\n    cat(\".\")\n\n    url <- sprintf(\"http://www.hockey-reference.com/leagues/NHL_%s_games.html\", s)\n    schedule_page <- read_html(url)\n\n    schedule <- schedule_page %>%\n      html_table(header = F) %>%\n      .[[1]] %>%\n      .[-1,] %>%\n      .[,c(1,2,4)] %>%\n      tbl_df()\n\n    names(schedule) <- c(\"date\", \"visitor\", \"home\")\n\n    links <- schedule_page %>%\n      html_nodes(\"#games a\") %>%\n      html_attr(\"href\") %>%\n      subset(str_detect(., \"boxscores\"))\n\n    schedule <- schedule %>%\n      mutate(season = s,\n             link = c(str_c(\"http://www.hockey-reference.com\", links), rep(NA, nrow(schedule) - length(links))))\n\n\n    schedules <- bind_rows(schedules, schedule)\n  }\n\n  schedules\n}\n\n\n\nread_player_games <- function(season, update) {\n\n  if (!missing(update))\n    season <- 2017 # this_season()\n\n  games <- read_schedule(season) %>%\n    filter(!is.na(link))\n\n  if (!missing(update)) {\n    games <- games %>%\n      filter(date >= update)\n  }\n\n  message(\"Reading player games.\")\n\n  skaters <- NULL\n  goalies <- NULL\n\n  for (l in 1:nrow(games)) {\n\n    cat(\".\")\n\n    url <- games$link[l]\n    dt <- games$date[l]\n\n    game_page <- read_html(url)\n\n    table_ids <- game_page %>%\n      html_nodes(\"table\") %>%\n      html_attr(\"id\")\n\n    tables <- game_page %>%\n      html_nodes(\"table\") %>%\n      .[3:6] %>%\n      html_table(fill = T)\n\n    names(tables) <- table_ids[3:6]\n\n    teams <- subset(table_ids, str_detect(table_ids, \"_skaters\")) %>% str_replace(\"_skaters\", \"\")\n    visitor <- teams[1]\n    home <- teams[2]\n\n    # skater stats\n    visitor_skater_stats <- tables[1][[1]][-c(1:2),]\n    home_skater_stats <- tables[3][[1]][-c(1:2),]\n\n    names(visitor_skater_stats) <- names(home_skater_stats) <-\n      c(\"rank\", \"player\", \"goals\", \"assists\", \"points\", \"plus_minus\", \"penalty_minutes\", \"even_strength_goals\",\n        \"power_play_goals\", \"short_handed_goals\", \"game_winning_goals\", \"even_strengt_assists\",\n        \"power_play_assists\", \"short_handed_assists\", \"shots\", \"shot_percentage\", \"shifts\", \"minutes_on_ice\")\n\n    visitor_skater_stats %<>% mutate(team = visitor, versus = home)\n    home_skater_stats %<>% mutate(team = home, versus = visitor)\n\n    skater_stats <- visitor_skater_stats %>%\n      bind_rows(home_skater_stats) %>%\n      filter(player != \"TOTAL\") %>%\n      mutate(minutes_on_ice = round(as.integer(str_extract(minutes_on_ice, \"\\\\d+\")) +\n                                      (as.integer(str_extract(minutes_on_ice, \"\\\\d+$\")) / 60), 1),\n             shot_percentage = as.numeric(shot_percentage)) %>%\n      mutate_at(vars(-player, -team, -shot_percentage, -minutes_on_ice), as.integer) %>%\n      replace_na(list(shot_percentage = 0)) %>%\n      mutate(shot_percentage = shot_percentage / 100) %>%\n      mutate(date = as.Date(dt)) %>%\n      select(-rank)\n\n    # goalie stats\n    visitor_goalie_stats <- tables[2][[1]][-c(1),]\n    home_goalie_stats <- tables[4][[1]][-c(1),]\n\n    names(visitor_goalie_stats) <- names(home_goalie_stats) <-\n      c(\"rank\", \"player\", \"decision\", \"goals_allowed\", \"shots_against\", \"saves\", \"save_percentage\",\n        \"shutout\", \"penalty_minutes\", \"minutes_on_ice\")\n\n    visitor_goalie_stats %<>% mutate(team = visitor, versus = home)\n    home_goalie_stats %<>% mutate(team = home, versus = visitor)\n\n    goalie_stats <- visitor_goalie_stats %>%\n      bind_rows(home_goalie_stats) %>%\n      mutate(minutes_on_ice = round(as.integer(str_extract(minutes_on_ice, \"\\\\d+\")) +\n                                      (as.integer(str_extract(minutes_on_ice, \"\\\\d+$\")) / 60), 1),\n             save_percentage = as.numeric(save_percentage)) %>%\n      mutate_at(vars(goals_allowed, shots_against, saves, shutout, penalty_minutes), funs(as.integer)) %>%\n      mutate(date = as.Date(dt)) %>%\n      select(-rank) %>%\n      group_by(team) %>%\n      mutate(decision = max(decision))\n\n\n    skaters <- bind_rows(skaters, skater_stats)\n    goalies <- bind_rows(goalies, goalie_stats)\n  }\n\n\n  out <- list(skaters = as_tibble(skaters),\n              goalies = as_tibble(goalies))\n  out\n}\n\n\n# read basic info on all players from hockey reference\nread_player_info <- function(season) {\n\n  message(\"Reading player info:\")\n\n  roster <- NULL\n  for (team in teams$short) {\n\n    cat(\".\")\n\n    url <- sprintf(\"http://www.hockey-reference.com/teams/%s/%s.html\", team, season)\n    team_page <- read_html(url)\n\n    # parse tables\n    team_roster <- team_page %>%\n      html_nodes(\"table\") %>%\n      .[2] %>%\n      html_table(fill = T) %>%\n      .[[1]] %>%\n      .[,c(1:10, 12)] %>%\n      tbl_df() %>%\n      transmute(no = No.,\n                player = str_replace_all(Player,\"\\\\s\\\\(.\\\\)\", \"\"),\n                letter = str_replace_all(str_extract(Player, \"\\\\(.+\\\\)\"), \"\\\\(|\\\\)\", \"\"),\n                origin = str_to_upper(Flag),\n                position = Pos,\n                age = Age,\n                height = Ht,\n                weight = Wt,\n                shoots = str_extract(`S/C`, \"[[:alpha:]]\"),\n                exp = as.character(Exp),\n                salary = Salary,\n                team = team)\n\n    if (is.null(roster)) {\n      roster <- team_roster\n    } else {\n      roster <- bind_rows(roster, team_roster)\n    }\n  }\n\n  roster\n}\n\n",
    "created" : 1480354361956.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1923162204",
    "id" : "67FC43B8",
    "lastKnownWriteTime" : 1480353641,
    "last_content_update" : 1480353641,
    "path" : "~/GitHub/ad-hockey/R/hockey_reference.R",
    "project_path" : "R/hockey_reference.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}