{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(rvest)\nlibrary(stringr)\n\n\nread_fantasy_roster <- function(league_id = 65267, user, passwd) {\n\n  message(\"Reading yahoo league roster:\")\n\n  cat(\".\")\n\n  get_fantasy_page <- function(url) {\n    s <- html_session(url)\n    form <- html_form(s)[[1]]\n    form <- set_values(form, username = user)\n    s <- submit_form(s, form)\n    form <- html_form(s)[[1]]\n    form <- set_values(form, passwd = passwd)\n    s <- submit_form(s,form)\n    s <- jump_to(s, url)\n    page <- read_html(s)\n    page\n  }\n\n  clean_roster <- function(df) {\n\n    tbl_df(df) %>%\n      rename(roster_spot = Pos) %>%\n      separate(Player, sep = \"\\n\", into = c(\"x1\", \"player\", \"x2\", \"x3\", \"status\", \"next_game\")) %>%\n      select(-starts_with(\"x\")) %>%\n      separate(player, sep = \" - \", into = c(\"player\", \"position\")) %>%\n      mutate(player = str_trim(player),\n             team = str_to_upper(str_extract(player, \"\\\\w{2,3}$\")),\n             player = str_replace(player, \"\\\\w{2,3}$\", \"\"),\n             home_away = ifelse(str_detect(next_game, \"\\\\@\"), \"away\", \"home\"),\n             next_versus = str_to_upper(str_extract(next_game, \"\\\\w{2,3}$\")),\n             next_game = str_extract(next_game, \"\\\\d:\\\\d\\\\d am\"),\n             has_game_tonight = ifelse(!is.na(next_game), 1, 0),\n             status = ifelse(str_trim(status) == \"\", NA, status)) %>%\n      mutate_all(str_trim) %>%\n      mutate(team = ifelse(team == \"SJ\", \"SJS\", team),\n             team = ifelse(team == \"TB\", \"TBL\", team),\n             team = ifelse(team == \"LA\", \"LAK\", team),\n             team = ifelse(team == \"NJ\", \"NJD\", team),\n             team = ifelse(team == \"ANH\", \"ANA\", team)) -> out\n\n    out\n  }\n\n  roster <- NULL\n\n  try({\n\n    url <- sprintf(\"https://hockey.fantasysports.yahoo.com/hockey/65267/startingrosters\", league_id)\n\n    roster_page <- suppressMessages(get_fantasy_page(url))\n\n    tables <- roster_page %>% html_nodes(\".Table\") %>% html_table()\n\n    owners <- roster_page %>% html_nodes(\".W-100\") %>% html_nodes(\"a\") %>%\n      subset(str_detect(., \"/hockey/\\\\d+/\\\\d\")) %>%\n      html_text()\n\n    names(tables) <- owners\n\n    suppressWarnings(\n      roster <- map_df(tables, clean_roster) %>%\n        mutate(owner = rep(owners, times = map_int(tables, nrow)))\n      )\n\n  }, silent = T)\n\n\n  if (is.null(roster)) {\n    return(\"Error: Failed\")\n  }\n\n  roster\n}\n",
    "created" : 1480354370111.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3654814472",
    "id" : "A6A583E6",
    "lastKnownWriteTime" : 1480354384,
    "last_content_update" : 1480354384501,
    "path" : "~/GitHub/ad-hockey/R/yahoo_fantasy.R",
    "project_path" : "R/yahoo_fantasy.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}